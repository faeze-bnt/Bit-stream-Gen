function [Out_Expected, Out_Unary] = MedianFilter5x5(In,Stream_Length)

%Stochastic and unary approach

Stream_In_01 = SNGFirstOnes(In( 1),Stream_Length);
Stream_In_02 = SNGFirstOnes(In( 2),Stream_Length);
Stream_In_03 = SNGFirstOnes(In( 3),Stream_Length);
Stream_In_04 = SNGFirstOnes(In( 4),Stream_Length);
Stream_In_05 = SNGFirstOnes(In( 5),Stream_Length);
Stream_In_06 = SNGFirstOnes(In( 6),Stream_Length);
Stream_In_07 = SNGFirstOnes(In( 7),Stream_Length);
Stream_In_08 = SNGFirstOnes(In( 8),Stream_Length);
Stream_In_09 = SNGFirstOnes(In( 9),Stream_Length);
Stream_In_10 = SNGFirstOnes(In(10),Stream_Length);
Stream_In_11 = SNGFirstOnes(In(11),Stream_Length);
Stream_In_12 = SNGFirstOnes(In(12),Stream_Length);
Stream_In_13 = SNGFirstOnes(In(13),Stream_Length);
Stream_In_14 = SNGFirstOnes(In(14),Stream_Length);
Stream_In_15 = SNGFirstOnes(In(15),Stream_Length);
Stream_In_16 = SNGFirstOnes(In(16),Stream_Length);
Stream_In_17 = SNGFirstOnes(In(17),Stream_Length);
Stream_In_18 = SNGFirstOnes(In(18),Stream_Length);
Stream_In_19 = SNGFirstOnes(In(19),Stream_Length);
Stream_In_20 = SNGFirstOnes(In(20),Stream_Length);
Stream_In_21 = SNGFirstOnes(In(21),Stream_Length);
Stream_In_22 = SNGFirstOnes(In(22),Stream_Length);
Stream_In_23 = SNGFirstOnes(In(23),Stream_Length);
Stream_In_24 = SNGFirstOnes(In(24),Stream_Length);
Stream_In_25 = SNGFirstOnes(In(25),Stream_Length);
Stream_In_26 = SNGFirstOnes(In(26),Stream_Length);


	[Min_01_01,  Max_01_01 ] = Sort( (Stream_In_01), (Stream_In_02));
	[Min_01_02,  Max_01_02 ] = Sort( (Stream_In_03), (Stream_In_04));
	[Min_01_03,  Max_01_03 ] = Sort( (Stream_In_05), (Stream_In_06));
	[Min_01_04,  Max_01_04 ] = Sort( (Stream_In_07), (Stream_In_08));
	[Min_01_05,  Max_01_05 ] = Sort( (Stream_In_09), (Stream_In_10));
	[Min_01_06,  Max_01_06 ] = Sort( (Stream_In_11), (Stream_In_12));
	[Min_01_07,  Max_01_07 ] = Sort( (Stream_In_13), (Stream_In_14));
	[Min_01_08,  Max_01_08 ] = Sort( (Stream_In_15), (Stream_In_16));
	[Min_01_09,  Max_01_09 ] = Sort( (Stream_In_17), (Stream_In_18));
	[Min_01_10,  Max_01_10 ] = Sort( (Stream_In_19), (Stream_In_20));
	[Min_01_11,  Max_01_11 ] = Sort( (Stream_In_21), (Stream_In_22));
	[Min_01_12,  Max_01_12 ] = Sort( (Stream_In_23), (Stream_In_24));
	[Min_01_13,  Max_01_13 ] = Sort( (Stream_In_25), (Stream_In_26));	
	[ Min_02_01,  Max_02_01] = Sort( (Max_01_01),  (Min_01_02));
	[ Min_02_02,  Max_02_02] = Sort( (Max_01_02),  (Min_01_03));
	[ Min_02_03,  Max_02_03] = Sort( (Max_01_03),  (Min_01_04));
	[ Min_02_04,  Max_02_04] = Sort( (Max_01_04),  (Min_01_05));
	[ Min_02_05,  Max_02_05] = Sort( (Max_01_05),  (Min_01_06));
	[ Min_02_06,  Max_02_06] = Sort( (Max_01_06),  (Min_01_07));
	[ Min_02_07,  Max_02_07] = Sort( (Max_01_07),  (Min_01_08));
	[ Min_02_08,  Max_02_08] = Sort( (Max_01_08),  (Min_01_09));
	[ Min_02_09,  Max_02_09] = Sort( (Max_01_09),  (Min_01_10));
	[ Min_02_10,  Max_02_10] = Sort( (Max_01_10),  (Min_01_11));
	[ Min_02_11,  Max_02_11] = Sort( (Max_01_11),  (Min_01_12));
	[ Min_02_12,  Max_02_12] = Sort( (Max_01_12),  (Min_01_13));
	[ Min_03_01,  Max_03_01] = Sort( (Min_01_01),  (Min_02_01));
	[ Min_03_02,  Max_03_02] = Sort( (Max_02_01),  (Min_02_02));
	[ Min_03_03,  Max_03_03] = Sort( (Max_02_02),  (Min_02_03));
	[ Min_03_04,  Max_03_04] = Sort( (Max_02_03),  (Min_02_04));
	[ Min_03_05,  Max_03_05] = Sort( (Max_02_04),  (Min_02_05));
	[ Min_03_06,  Max_03_06] = Sort( (Max_02_05),  (Min_02_06));
	[ Min_03_07,  Max_03_07] = Sort( (Max_02_06),  (Min_02_07));
	[ Min_03_08,  Max_03_08] = Sort( (Max_02_07),  (Min_02_08));
	[ Min_03_09,  Max_03_09] = Sort( (Max_02_08),  (Min_02_09));
	[ Min_03_10,  Max_03_10] = Sort( (Max_02_09),  (Min_02_10));
	[ Min_03_11,  Max_03_11] = Sort( (Max_02_10),  (Min_02_11));
	[ Min_03_12,  Max_03_12] = Sort( (Max_02_11),  (Min_02_12));	
	[ Min_03_13,  Max_03_13] = Sort( (Max_02_12),  (Max_01_13));	 
	[ Min_04_01,  Max_04_01] = Sort( (Max_03_01),  (Min_03_02));
	[ Min_04_02,  Max_04_02] = Sort( (Max_03_02),  (Min_03_03));
	[ Min_04_03,  Max_04_03] = Sort( (Max_03_03),  (Min_03_04));
	[ Min_04_04,  Max_04_04] = Sort( (Max_03_04),  (Min_03_05));
	[ Min_04_05,  Max_04_05] = Sort( (Max_03_05),  (Min_03_06));
	[ Min_04_06,  Max_04_06] = Sort( (Max_03_06),  (Min_03_07));
	[ Min_04_07,  Max_04_07] = Sort( (Max_03_07),  (Min_03_08));
	[ Min_04_08,  Max_04_08] = Sort( (Max_03_08),  (Min_03_09));
	[ Min_04_09,  Max_04_09] = Sort( (Max_03_09),  (Min_03_10));
	[ Min_04_10,  Max_04_10] = Sort( (Max_03_10),  (Min_03_11));
	[ Min_04_11,  Max_04_11] = Sort( (Max_03_11),  (Min_03_12));
	[ Min_04_12,  Max_04_12] = Sort( (Max_03_12),  (Min_03_13));
	[ Min_05_01,  Max_05_01] = Sort( (Min_03_01),  (Min_04_01));
	[ Min_05_02,  Max_05_02] = Sort( (Max_04_01),  (Min_04_02));
	[ Min_05_03,  Max_05_03] = Sort( (Max_04_02),  (Min_04_03));
	[ Min_05_04,  Max_05_04] = Sort( (Max_04_03),  (Min_04_04));
	[ Min_05_05,  Max_05_05] = Sort( (Max_04_04),  (Min_04_05));
	[ Min_05_06,  Max_05_06] = Sort( (Max_04_05),  (Min_04_06));
	[ Min_05_07,  Max_05_07] = Sort( (Max_04_06),  (Min_04_07));
	[ Min_05_08,  Max_05_08] = Sort( (Max_04_07),  (Min_04_08));
	[ Min_05_09,  Max_05_09] = Sort( (Max_04_08),  (Min_04_09));
	[ Min_05_10,  Max_05_10] = Sort( (Max_04_09),  (Min_04_10));
	[ Min_05_11,  Max_05_11] = Sort( (Max_04_10),  (Min_04_11));
	[ Min_05_12,  Max_05_12] = Sort( (Max_04_11),  (Min_04_12));	
	[ Min_05_13,  Max_05_13] = Sort( (Max_04_12),  (Max_03_13));	
	[ Min_06_01,  Max_06_01] = Sort( (Max_05_01),  (Min_05_02));
	[ Min_06_02,  Max_06_02] = Sort( (Max_05_02),  (Min_05_03));
	[ Min_06_03,  Max_06_03] = Sort( (Max_05_03),  (Min_05_04));
	[ Min_06_04,  Max_06_04] = Sort( (Max_05_04),  (Min_05_05));
	[ Min_06_05,  Max_06_05] = Sort( (Max_05_05),  (Min_05_06));
	[ Min_06_06,  Max_06_06] = Sort( (Max_05_06),  (Min_05_07));
	[ Min_06_07,  Max_06_07] = Sort( (Max_05_07),  (Min_05_08));
	[ Min_06_08,  Max_06_08] = Sort( (Max_05_08),  (Min_05_09));
	[ Min_06_09,  Max_06_09] = Sort( (Max_05_09),  (Min_05_10));
	[ Min_06_10,  Max_06_10] = Sort( (Max_05_10),  (Min_05_11));
	[ Min_06_11,  Max_06_11] = Sort( (Max_05_11),  (Min_05_12));
	[ Min_06_12,  Max_06_12] = Sort( (Max_05_12),  (Min_05_13));	
	[ Min_07_01,  Max_07_01] = Sort( (Min_05_01),  (Min_06_01));
	[ Min_07_02,  Max_07_02] = Sort( (Max_06_01),  (Min_06_02));
	[ Min_07_03,  Max_07_03] = Sort( (Max_06_02),  (Min_06_03));
	[ Min_07_04,  Max_07_04] = Sort( (Max_06_03),  (Min_06_04));
	[ Min_07_05,  Max_07_05] = Sort( (Max_06_04),  (Min_06_05));
	[ Min_07_06,  Max_07_06] = Sort( (Max_06_05),  (Min_06_06));
	[ Min_07_07,  Max_07_07] = Sort( (Max_06_06),  (Min_06_07));
	[ Min_07_08,  Max_07_08] = Sort( (Max_06_07),  (Min_06_08));
	[ Min_07_09,  Max_07_09] = Sort( (Max_06_08),  (Min_06_09));
	[ Min_07_10,  Max_07_10] = Sort( (Max_06_09),  (Min_06_10));
	[ Min_07_11,  Max_07_11] = Sort( (Max_06_10),  (Min_06_11));
	[ Min_07_12,  Max_07_12] = Sort( (Max_06_11),  (Min_06_12));	
	[ Min_07_13,  Max_07_13] = Sort( (Max_06_12),  (Max_05_13));	
	[ Min_08_01,  Max_08_01] = Sort( (Max_07_01),  (Min_07_02));
	[ Min_08_02,  Max_08_02] = Sort( (Max_07_02),  (Min_07_03));
	[ Min_08_03,  Max_08_03] = Sort( (Max_07_03),  (Min_07_04));
	[ Min_08_04,  Max_08_04] = Sort( (Max_07_04),  (Min_07_05));
	[ Min_08_05,  Max_08_05] = Sort( (Max_07_05),  (Min_07_06));
	[ Min_08_06,  Max_08_06] = Sort( (Max_07_06),  (Min_07_07));
	[ Min_08_07,  Max_08_07] = Sort( (Max_07_07),  (Min_07_08));
	[ Min_08_08,  Max_08_08] = Sort( (Max_07_08),  (Min_07_09));
	[ Min_08_09,  Max_08_09] = Sort( (Max_07_09),  (Min_07_10));
	[ Min_08_10,  Max_08_10] = Sort( (Max_07_10),  (Min_07_11));
	[ Min_08_11,  Max_08_11] = Sort( (Max_07_11),  (Min_07_12));
	[ Min_08_12,  Max_08_12] = Sort( (Max_07_12),  (Min_07_13));	
	[ Min_09_01,  Max_09_01] = Sort( (Min_07_01),  (Min_08_01));
	[ Min_09_02,  Max_09_02] = Sort( (Max_08_01),  (Min_08_02));
	[ Min_09_03,  Max_09_03] = Sort( (Max_08_02),  (Min_08_03));
	[ Min_09_04,  Max_09_04] = Sort( (Max_08_03),  (Min_08_04));
	[ Min_09_05,  Max_09_05] = Sort( (Max_08_04),  (Min_08_05));
	[ Min_09_06,  Max_09_06] = Sort( (Max_08_05),  (Min_08_06));
	[ Min_09_07,  Max_09_07] = Sort( (Max_08_06),  (Min_08_07));
	[ Min_09_08,  Max_09_08] = Sort( (Max_08_07),  (Min_08_08));
	[ Min_09_09,  Max_09_09] = Sort( (Max_08_08),  (Min_08_09));
	[ Min_09_10,  Max_09_10] = Sort( (Max_08_09),  (Min_08_10));
	[ Min_09_11,  Max_09_11] = Sort( (Max_08_10),  (Min_08_11));
	[ Min_09_12,  Max_09_12] = Sort( (Max_08_11),  (Min_08_12));	
	[ Min_09_13,  Max_09_13] = Sort( (Max_08_12),  (Max_07_13));	
	[ Min_10_01,  Max_10_01] = Sort( (Max_09_01),  (Min_09_02));
	[ Min_10_02,  Max_10_02] = Sort( (Max_09_02),  (Min_09_03));
	[ Min_10_03,  Max_10_03] = Sort( (Max_09_03),  (Min_09_04));
	[ Min_10_04,  Max_10_04] = Sort( (Max_09_04),  (Min_09_05));
	[ Min_10_05,  Max_10_05] = Sort( (Max_09_05),  (Min_09_06));
	[ Min_10_06,  Max_10_06] = Sort( (Max_09_06),  (Min_09_07));
	[ Min_10_07,  Max_10_07] = Sort( (Max_09_07),  (Min_09_08));
	[ Min_10_08,  Max_10_08] = Sort( (Max_09_08),  (Min_09_09));
	[ Min_10_09,  Max_10_09] = Sort( (Max_09_09),  (Min_09_10));
	[ Min_10_10,  Max_10_10] = Sort( (Max_09_10),  (Min_09_11));
	[ Min_10_11,  Max_10_11] = Sort( (Max_09_11),  (Min_09_12));
	[ Min_10_12,  Max_10_12] = Sort( (Max_09_12),  (Min_09_13));	
	[ Min_11_01,  Max_11_01] = Sort( (Min_09_01),  (Min_10_01));
	[ Min_11_02,  Max_11_02] = Sort( (Max_10_01),  (Min_10_02));
	[ Min_11_03,  Max_11_03] = Sort( (Max_10_02),  (Min_10_03));
	[ Min_11_04,  Max_11_04] = Sort( (Max_10_03),  (Min_10_04));
	[ Min_11_05,  Max_11_05] = Sort( (Max_10_04),  (Min_10_05));
	[ Min_11_06,  Max_11_06] = Sort( (Max_10_05),  (Min_10_06));
	[ Min_11_07,  Max_11_07] = Sort( (Max_10_06),  (Min_10_07));
	[ Min_11_08,  Max_11_08] = Sort( (Max_10_07),  (Min_10_08));
	[ Min_11_09,  Max_11_09] = Sort( (Max_10_08),  (Min_10_09));
	[ Min_11_10,  Max_11_10] = Sort( (Max_10_09),  (Min_10_10));
	[ Min_11_11,  Max_11_11] = Sort( (Max_10_10),  (Min_10_11));
	[ Min_11_12,  Max_11_12] = Sort( (Max_10_11),  (Min_10_12));	
	[ Min_11_13,  Max_11_13] = Sort( (Max_10_12),  (Max_09_13));
	[ Min_12_01,  Max_12_01] = Sort( (Max_11_01),  (Min_11_02));
	[ Min_12_02,  Max_12_02] = Sort( (Max_11_02),  (Min_11_03));
	[ Min_12_03,  Max_12_03] = Sort( (Max_11_03),  (Min_11_04));
	[ Min_12_04,  Max_12_04] = Sort( (Max_11_04),  (Min_11_05));
	[ Min_12_05,  Max_12_05] = Sort( (Max_11_05),  (Min_11_06));
	[ Min_12_06,  Max_12_06] = Sort( (Max_11_06),  (Min_11_07));
	[ Min_12_07,  Max_12_07] = Sort( (Max_11_07),  (Min_11_08));
	[ Min_12_08,  Max_12_08] = Sort( (Max_11_08),  (Min_11_09));
	[ Min_12_09,  Max_12_09] = Sort( (Max_11_09),  (Min_11_10));
	[ Min_12_10,  Max_12_10] = Sort( (Max_11_10),  (Min_11_11));
	[ Min_12_11,  Max_12_11] = Sort( (Max_11_11),  (Min_11_12));
	[ Min_12_12,  Max_12_12] = Sort( (Max_11_12),  (Min_11_13));	
	[ Min_13_01,  Max_13_01] = Sort( (Min_11_01),  (Min_12_01));
	[ Min_13_02,  Max_13_02] = Sort( (Max_12_01),  (Min_12_02));
	[ Min_13_03,  Max_13_03] = Sort( (Max_12_02),  (Min_12_03));
	[ Min_13_04,  Max_13_04] = Sort( (Max_12_03),  (Min_12_04));
	[ Min_13_05,  Max_13_05] = Sort( (Max_12_04),  (Min_12_05));
	[ Min_13_06,  Max_13_06] = Sort( (Max_12_05),  (Min_12_06));
	[ Min_13_07,  Max_13_07] = Sort( (Max_12_06),  (Min_12_07));
	[ Min_13_08,  Max_13_08] = Sort( (Max_12_07),  (Min_12_08));
	[ Min_13_09,  Max_13_09] = Sort( (Max_12_08),  (Min_12_09));
	[ Min_13_10,  Max_13_10] = Sort( (Max_12_09),  (Min_12_10));
	[ Min_13_11,  Max_13_11] = Sort( (Max_12_10),  (Min_12_11));
	[ Min_13_12,  Max_13_12] = Sort( (Max_12_11),  (Min_12_12));	
	[ Min_13_13,  Max_13_13] = Sort( (Max_12_12),  (Max_11_13));
	[ Min_14_01,  Max_14_01] = Sort( (Max_13_01),  (Min_13_02));
	[ Min_14_02,  Max_14_02] = Sort( (Max_13_02),  (Min_13_03));
	[ Min_14_03,  Max_14_03] = Sort( (Max_13_03),  (Min_13_04));
	[ Min_14_04,  Max_14_04] = Sort( (Max_13_04),  (Min_13_05));
	[ Min_14_05,  Max_14_05] = Sort( (Max_13_05),  (Min_13_06));
	[ Min_14_06,  Max_14_06] = Sort( (Max_13_06),  (Min_13_07));
	[ Min_14_07,  Max_14_07] = Sort( (Max_13_07),  (Min_13_08));
	[ Min_14_08,  Max_14_08] = Sort( (Max_13_08),  (Min_13_09));
	[ Min_14_09,  Max_14_09] = Sort( (Max_13_09),  (Min_13_10));
	[ Min_14_10,  Max_14_10] = Sort( (Max_13_10),  (Min_13_11));
	[ Min_14_11,  Max_14_11] = Sort( (Max_13_11),  (Min_13_12));
	[ Min_14_12,  Max_14_12] = Sort( (Max_13_12),  (Min_13_13));
	[ Min_15_02,  Max_15_02] = Sort( (Max_14_01),  (Min_14_02));
	[ Min_15_03,  Max_15_03] = Sort( (Max_14_02),  (Min_14_03));
	[ Min_15_04,  Max_15_04] = Sort( (Max_14_03),  (Min_14_04));
	[ Min_15_05,  Max_15_05] = Sort( (Max_14_04),  (Min_14_05));
	[ Min_15_06,  Max_15_06] = Sort( (Max_14_05),  (Min_14_06));
	[ Min_15_07,  Max_15_07] = Sort( (Max_14_06),  (Min_14_07));
	[ Min_15_08,  Max_15_08] = Sort( (Max_14_07),  (Min_14_08));
	[ Min_15_09,  Max_15_09] = Sort( (Max_14_08),  (Min_14_09));
	[ Min_15_10,  Max_15_10] = Sort( (Max_14_09),  (Min_14_10));
	[ Min_15_11,  Max_15_11] = Sort( (Max_14_10),  (Min_14_11));
	[ Min_15_12,  Max_15_12] = Sort( (Max_14_11),  (Min_14_12));	
	[ Min_15_13,  Max_15_13] = Sort( (Max_14_12),  (Max_13_13));
	[ Min_16_02,  Max_16_02] = Sort( (Max_15_02),  (Min_15_03));
	[ Min_16_03,  Max_16_03] = Sort( (Max_15_03),  (Min_15_04));
	[ Min_16_04,  Max_16_04] = Sort( (Max_15_04),  (Min_15_05));
	[ Min_16_05,  Max_16_05] = Sort( (Max_15_05),  (Min_15_06));
	[ Min_16_06,  Max_16_06] = Sort( (Max_15_06),  (Min_15_07));
	[ Min_16_07,  Max_16_07] = Sort( (Max_15_07),  (Min_15_08));
	[ Min_16_08,  Max_16_08] = Sort( (Max_15_08),  (Min_15_09));
	[ Min_16_09,  Max_16_09] = Sort( (Max_15_09),  (Min_15_10));
	[ Min_16_10,  Max_16_10] = Sort( (Max_15_10),  (Min_15_11));
	[ Min_16_11,  Max_16_11] = Sort( (Max_15_11),  (Min_15_12));
	[ Min_16_12,  Max_16_12] = Sort( (Max_15_12),  (Min_15_13));
	[ Min_17_03,  Max_17_03] = Sort( (Max_16_02),  (Min_16_03));
	[ Min_17_04,  Max_17_04] = Sort( (Max_16_03),  (Min_16_04));
	[ Min_17_05,  Max_17_05] = Sort( (Max_16_04),  (Min_16_05));
	[ Min_17_06,  Max_17_06] = Sort( (Max_16_05),  (Min_16_06));
	[ Min_17_07,  Max_17_07] = Sort( (Max_16_06),  (Min_16_07));
	[ Min_17_08,  Max_17_08] = Sort( (Max_16_07),  (Min_16_08));
	[ Min_17_09,  Max_17_09] = Sort( (Max_16_08),  (Min_16_09));
	[ Min_17_10,  Max_17_10] = Sort( (Max_16_09),  (Min_16_10));
	[ Min_17_11,  Max_17_11] = Sort( (Max_16_10),  (Min_16_11));
	[ Min_17_12,  Max_17_12] = Sort( (Max_16_11),  (Min_16_12));	
	[ Min_18_03,  Max_18_03] = Sort( (Max_17_03),  (Min_17_04));
	[ Min_18_04,  Max_18_04] = Sort( (Max_17_04),  (Min_17_05));
	[ Min_18_05,  Max_18_05] = Sort( (Max_17_05),  (Min_17_06));
	[ Min_18_06,  Max_18_06] = Sort( (Max_17_06),  (Min_17_07));
	[ Min_18_07,  Max_18_07] = Sort( (Max_17_07),  (Min_17_08));
	[ Min_18_08,  Max_18_08] = Sort( (Max_17_08),  (Min_17_09));
	[ Min_18_09,  Max_18_09] = Sort( (Max_17_09),  (Min_17_10));
	[ Min_18_10,  Max_18_10] = Sort( (Max_17_10),  (Min_17_11));
	[ Min_18_11,  Max_18_11] = Sort( (Max_17_11),  (Min_17_12));
	[ Min_19_04,  Max_19_04] = Sort( (Max_18_03),  (Min_18_04));
	[ Min_19_05,  Max_19_05] = Sort( (Max_18_04),  (Min_18_05));
	[ Min_19_06,  Max_19_06] = Sort( (Max_18_05),  (Min_18_06));
	[ Min_19_07,  Max_19_07] = Sort( (Max_18_06),  (Min_18_07));
	[ Min_19_08,  Max_19_08] = Sort( (Max_18_07),  (Min_18_08));
	[ Min_19_09,  Max_19_09] = Sort( (Max_18_08),  (Min_18_09));
	[ Min_19_10,  Max_19_10] = Sort( (Max_18_09),  (Min_18_10));
	[ Min_19_11,  Max_19_11] = Sort( (Max_18_10),  (Min_18_11));
	[ Min_20_04,  Max_20_04] = Sort( (Max_19_04),  (Min_19_05));
	[ Min_20_05,  Max_20_05] = Sort( (Max_19_05),  (Min_19_06));
	[ Min_20_06,  Max_20_06] = Sort( (Max_19_06),  (Min_19_07));
	[ Min_20_07,  Max_20_07] = Sort( (Max_19_07),  (Min_19_08));
	[ Min_20_08,  Max_20_08] = Sort( (Max_19_08),  (Min_19_09));
	[ Min_20_09,  Max_20_09] = Sort( (Max_19_09),  (Min_19_10));
	[ Min_20_10,  Max_20_10] = Sort( (Max_19_10),  (Min_19_11));
	[ Min_21_05,  Max_21_05] = Sort( (Max_20_04),  (Min_20_05));
	[ Min_21_06,  Max_21_06] = Sort( (Max_20_05),  (Min_20_06));
	[ Min_21_07,  Max_21_07] = Sort( (Max_20_06),  (Min_20_07));
	[ Min_21_08,  Max_21_08] = Sort( (Max_20_07),  (Min_20_08));
	[ Min_21_09,  Max_21_09] = Sort( (Max_20_08),  (Min_20_09));
	[ Min_21_10,  Max_21_10] = Sort( (Max_20_09),  (Min_20_10));
	[ Min_22_05,  Max_22_05] = Sort( (Max_21_05),  (Min_21_06));
	[ Min_22_06,  Max_22_06] = Sort( (Max_21_06),  (Min_21_07));
	[ Min_22_07,  Max_22_07] = Sort( (Max_21_07),  (Min_21_08));
	[ Min_22_08,  Max_22_08] = Sort( (Max_21_08),  (Min_21_09));
	[ Min_22_09,  Max_22_09] = Sort( (Max_21_09),  (Min_21_10));
	[ Min_23_06,  Max_23_06] = Sort( (Max_22_05),  (Min_22_06));
	[ Min_23_07,  Max_23_07] = Sort( (Max_22_06),  (Min_22_07));
	[ Min_23_08,  Max_23_08] = Sort( (Max_22_07),  (Min_22_08));
	[ Min_23_09,  Max_23_09] = Sort( (Max_22_08),  (Min_22_09));
	[ Min_24_06,  Max_24_06] = Sort( (Max_23_06),  (Min_23_07));
	[ Min_24_07,  Max_24_07] = Sort( (Max_23_07),  (Min_23_08));
	[ Min_24_08,  Max_24_08] = Sort( (Max_23_08),  (Min_23_09));
	[ Min_25_07,  Max_25_07] = Sort( (Max_24_06),  (Min_24_07));
	[ Min_25_08,  Max_25_08] = Sort( (Max_24_07),  (Min_24_08));
	[Out_Stream,  Max_26_07] = Sort( (Max_25_07),  (Min_25_08));

                    
	Out_Unary = sum(Out_Stream);


Out_Expected = median(In);


end